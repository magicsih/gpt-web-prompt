name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_NAME: gpt-web-prompt
  K8S_KUBECTL_VERSION: "v1.31.0"
  K8S_DEPLOYMENT_NAME: gpt-web-prompt
  K8S_CONTAINER_NAME: gpt-web-prompt
  K8S_NAMESPACE: gpt
jobs:

  Build_And_Rollout:

    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - 
      id: commit
      uses: prompt/actions-commit-hash@v3
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/${{ env.APP_NAME }}:${{ steps.commit.outputs.short }}
        platforms: linux/arm64
    - 
      name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/${{ env.K8S_KUBECTL_VERSION }}/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
    - 
      name: Create kubeconfig file
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > /tmp/kubeconfig.yaml
    -
      name: Rollout      
      env:
        KUBECONFIG: /tmp/kubeconfig.yaml
      run: |
        kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} ${{ env.K8S_CONTAINER_NAME }}=${{ secrets.DOCKER_CONTAINER_REGISTRY }}/${{ env.APP_NAME }}:${{ steps.commit.outputs.short }} -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}
        kubectl get pod -l app=${{ env.K8S_DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}